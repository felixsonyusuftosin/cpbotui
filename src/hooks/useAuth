import React, { useState, useCallback } from 'react'
import useRequest  from 'useRequest'
import axios from 'axios'
import { apiError } from '../utils/apiError'
import * as firebase from 'firebase'
import 'firebase/auth'
import config from '../utils/config'



const server_url = process.env.REACT_APP_AUTH_SERVER
const login_url = `${server_url}/login`
firebase.config = config

export const axiosConfigurations = {
  responseType: 'json',
  responseEncoding: 'utf8',
  validateStatus: status => status < 400
}

export default () => { 
  const [credentials, setCredentials ] = useState({ 
    email: '',
    password: ''
  })
  const [error, setError ] = useState('')

 const login = useCallback( async () => { 
   const { email, password } = credentials
   if (!email || !password ) {
     setError('invalid parameter for please complete the credentials')
     return 
   } 
  try {
  const token = await axios.post(login_url, {...axiosConfigurations,  data: credentials })
  if(token)  { 
    const signInToken = await firebase.auth().signInWithCustomToken(token)
  }
  } catch(error ) { 
    if (error.response) {
      const { data } = error.response
      setError(data)
    } else if (error.request) {
      setError(error.request)
    } else {
      setError(error.message)
    }
    return false
  }

 },[credentials])


}